/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetable;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author DELL
 */
public class dlgTimeTable2 extends javax.swing.JDialog {

    /**
     * Creates new form dlgTimeTable
     */
    public dlgTimeTable2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.setSize(1020, 748);
        clsCon.inti();
        clCon.inti();
        
        getCboCourse();         
        showCourseIdToLabel();       
        showSemesterIdToLabel();
        showTeacherIdToLabel();      
        showClassIdToLabel();
//        getCboRoom();
//        ShowRoomNumber();
        
        cboSemester.setEnabled(false);
        cboClass.setEnabled(false);
        cboTeacher.setEnabled(false);

        cboSemester.removeAllItems();
        cboSemester.addItem("--- Select ---");
        cboTeacher.removeAllItems();
        cboTeacher.addItem("--- Select ---");
        cboClass.removeAllItems();
        cboClass.addItem("--- Select ---");
        
        cboTeacher.setVisible(false);
        cboSubject.setVisible(false);}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboSemester = new javax.swing.JComboBox<>();
        cboClass = new javax.swing.JComboBox<>();
        cboCourse = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        txtSesion2 = new javax.swing.JTextField();
        txtSesion1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        txtMonday1 = new javax.swing.JTextField();
        txtMonday2 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        txtTuesday1 = new javax.swing.JTextField();
        txtTuesday2 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jTextField8 = new javax.swing.JTextField();
        txtSaturday1 = new javax.swing.JTextField();
        txtSaturday2 = new javax.swing.JTextField();
        txtFriday1 = new javax.swing.JTextField();
        txtFriday2 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        txtThursday1 = new javax.swing.JTextField();
        txtThursday2 = new javax.swing.JTextField();
        txtWednesday1 = new javax.swing.JTextField();
        txtWednesday2 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        chkT1 = new javax.swing.JCheckBox();
        chkT2 = new javax.swing.JCheckBox();
        chkT4 = new javax.swing.JCheckBox();
        chkT3 = new javax.swing.JCheckBox();
        chkT8 = new javax.swing.JCheckBox();
        chkT7 = new javax.swing.JCheckBox();
        chkT6 = new javax.swing.JCheckBox();
        chkT10 = new javax.swing.JCheckBox();
        chkT9 = new javax.swing.JCheckBox();
        chkT5 = new javax.swing.JCheckBox();
        lblSubject1 = new javax.swing.JLabel();
        lblSubject2 = new javax.swing.JLabel();
        lblSubject3 = new javax.swing.JLabel();
        lblSubject4 = new javax.swing.JLabel();
        lblSubject5 = new javax.swing.JLabel();
        lblSubject6 = new javax.swing.JLabel();
        lblSubject7 = new javax.swing.JLabel();
        lblSubject8 = new javax.swing.JLabel();
        lblSubject9 = new javax.swing.JLabel();
        lblSubject10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        txt2 = new javax.swing.JTextField();
        txt3 = new javax.swing.JTextField();
        txt4 = new javax.swing.JTextField();
        txt5 = new javax.swing.JTextField();
        txt6 = new javax.swing.JTextField();
        txt7 = new javax.swing.JTextField();
        txt8 = new javax.swing.JTextField();
        txt9 = new javax.swing.JTextField();
        txt10 = new javax.swing.JTextField();
        txt16 = new javax.swing.JTextField();
        txt12 = new javax.swing.JTextField();
        txt15 = new javax.swing.JTextField();
        txt11 = new javax.swing.JTextField();
        txt20 = new javax.swing.JTextField();
        txt17 = new javax.swing.JTextField();
        txt18 = new javax.swing.JTextField();
        txt19 = new javax.swing.JTextField();
        txt14 = new javax.swing.JTextField();
        txt13 = new javax.swing.JTextField();
        lblCourse = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        lblTeacher = new javax.swing.JLabel();
        lblClass = new javax.swing.JLabel();
        lblClassName = new javax.swing.JLabel();
        lblRoomID = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        cboTeacher = new javax.swing.JComboBox<>();
        lblSession1 = new javax.swing.JLabel();
        lblSession2 = new javax.swing.JLabel();
        cboSession = new javax.swing.JComboBox<>();
        cboLab = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Charlemagne Std", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Course Timetabling");

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        btnNew.setBackground(new java.awt.Color(51, 153, 255));
        btnNew.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setText("New");
        btnNew.setBorder(null);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 153, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setBorder(null);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Course");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Semester");

        cboSemester.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboSemester.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboSemesterFocusLost(evt);
            }
        });

        cboClass.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        cboCourse.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Class");

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setFocusable(false);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setFocusable(false);
        jTextField1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextField1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        txtSesion2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSesion2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSesion2.setText("Sesion 2");
        txtSesion2.setFocusable(false);
        txtSesion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSesion2ActionPerformed(evt);
            }
        });

        txtSesion1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSesion1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSesion1.setText("Sesion 1");
        txtSesion1.setFocusable(false);
        txtSesion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSesion1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSesion2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSesion1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtSesion1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtSesion2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setFocusable(false);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Monday");
        jTextField2.setFocusable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        txtMonday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMonday1.setForeground(new java.awt.Color(0, 0, 204));
        txtMonday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMonday1.setFocusable(false);
        txtMonday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonday1ActionPerformed(evt);
            }
        });

        txtMonday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMonday2.setForeground(new java.awt.Color(0, 0, 204));
        txtMonday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMonday2.setFocusable(false);
        txtMonday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMonday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtMonday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtMonday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtMonday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setFocusable(false);

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("Tuesday");
        jTextField4.setFocusable(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        txtTuesday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTuesday1.setForeground(new java.awt.Color(0, 0, 204));
        txtTuesday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTuesday1.setFocusable(false);
        txtTuesday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTuesday1ActionPerformed(evt);
            }
        });

        txtTuesday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTuesday2.setForeground(new java.awt.Color(0, 0, 204));
        txtTuesday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTuesday2.setFocusable(false);
        txtTuesday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTuesday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtTuesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtTuesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtTuesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtTuesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setFocusable(false);

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("Wednesday");
        jTextField3.setFocusable(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("Friday");
        jTextField6.setFocusable(false);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setText("Saturday");
        jTextField8.setFocusable(false);
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        txtSaturday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSaturday1.setForeground(new java.awt.Color(0, 0, 204));
        txtSaturday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSaturday1.setFocusable(false);
        txtSaturday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaturday1ActionPerformed(evt);
            }
        });

        txtSaturday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSaturday2.setForeground(new java.awt.Color(0, 0, 204));
        txtSaturday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSaturday2.setFocusable(false);
        txtSaturday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaturday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSaturday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSaturday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtSaturday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtSaturday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        txtFriday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtFriday1.setForeground(new java.awt.Color(0, 0, 204));
        txtFriday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFriday1.setFocusable(false);
        txtFriday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFriday1ActionPerformed(evt);
            }
        });

        txtFriday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtFriday2.setForeground(new java.awt.Color(0, 0, 204));
        txtFriday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFriday2.setFocusable(false);
        txtFriday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFriday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtFriday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFriday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtFriday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtFriday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("Thrusday");
        jTextField7.setFocusable(false);
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        txtThursday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtThursday1.setForeground(new java.awt.Color(0, 0, 204));
        txtThursday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtThursday1.setFocusable(false);
        txtThursday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThursday1ActionPerformed(evt);
            }
        });

        txtThursday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtThursday2.setForeground(new java.awt.Color(0, 0, 204));
        txtThursday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtThursday2.setFocusable(false);
        txtThursday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThursday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtThursday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtThursday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtThursday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtThursday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        txtWednesday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtWednesday1.setForeground(new java.awt.Color(0, 0, 204));
        txtWednesday1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWednesday1.setFocusable(false);
        txtWednesday1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWednesday1ActionPerformed(evt);
            }
        });

        txtWednesday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtWednesday2.setForeground(new java.awt.Color(0, 0, 204));
        txtWednesday2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWednesday2.setToolTipText("");
        txtWednesday2.setFocusable(false);
        txtWednesday2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWednesday2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtWednesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtWednesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtWednesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txtWednesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(204, 255, 255));

        chkT1.setBackground(new java.awt.Color(204, 255, 255));
        chkT1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT1.setText("Monday");
        chkT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT1ActionPerformed(evt);
            }
        });

        chkT2.setBackground(new java.awt.Color(204, 255, 255));
        chkT2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT2.setText("Monday");
        chkT2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT2ActionPerformed(evt);
            }
        });

        chkT4.setBackground(new java.awt.Color(204, 255, 255));
        chkT4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT4.setText("Monday");
        chkT4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT4ActionPerformed(evt);
            }
        });

        chkT3.setBackground(new java.awt.Color(204, 255, 255));
        chkT3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT3.setText("Monday");
        chkT3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT3ActionPerformed(evt);
            }
        });

        chkT8.setBackground(new java.awt.Color(204, 255, 255));
        chkT8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT8.setText("Monday");
        chkT8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT8ActionPerformed(evt);
            }
        });

        chkT7.setBackground(new java.awt.Color(204, 255, 255));
        chkT7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT7.setText("Monday");
        chkT7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT7ActionPerformed(evt);
            }
        });

        chkT6.setBackground(new java.awt.Color(204, 255, 255));
        chkT6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT6.setText("Monday");
        chkT6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT6ActionPerformed(evt);
            }
        });

        chkT10.setBackground(new java.awt.Color(204, 255, 255));
        chkT10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT10.setText("Monday");
        chkT10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT10ActionPerformed(evt);
            }
        });

        chkT9.setBackground(new java.awt.Color(204, 255, 255));
        chkT9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT9.setText("Monday");
        chkT9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT9ActionPerformed(evt);
            }
        });

        chkT5.setBackground(new java.awt.Color(204, 255, 255));
        chkT5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        chkT5.setText("Monday");
        chkT5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkT5ActionPerformed(evt);
            }
        });

        lblSubject1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject1.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject1.setText("Subject");

        lblSubject2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject2.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject2.setText("Subject");

        lblSubject3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject3.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject3.setText("Subject");

        lblSubject4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject4.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject4.setText("Subject");

        lblSubject5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject5.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject5.setText("Subject");

        lblSubject6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject6.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject6.setText("Subject");

        lblSubject7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject7.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject7.setText("Subject");

        lblSubject8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject8.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject8.setText("Subject");

        lblSubject9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject9.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject9.setText("Subject");

        lblSubject10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSubject10.setForeground(new java.awt.Color(0, 51, 255));
        lblSubject10.setText("Subject");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Teacher(s) and Subject(s)");

        txt1.setText("0");

        txt2.setText("0");

        txt3.setText("0");

        txt4.setText("0");

        txt5.setText("0");

        txt6.setText("0");

        txt7.setText("0");

        txt8.setText("0");
        txt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt8ActionPerformed(evt);
            }
        });

        txt9.setText("0");

        txt10.setText("0");

        txt16.setText("0");

        txt12.setText("0");

        txt15.setText("0");

        txt11.setText("0");

        txt20.setText("0");

        txt17.setText("0");

        txt18.setText("0");
        txt18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt18ActionPerformed(evt);
            }
        });

        txt19.setText("0");

        txt14.setText("0");

        txt13.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkT1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkT4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txt10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject8, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSubject5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSubject1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT1)
                    .addComponent(lblSubject1)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT2)
                    .addComponent(lblSubject2)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT3)
                    .addComponent(lblSubject3)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT4)
                    .addComponent(lblSubject4)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT5)
                    .addComponent(lblSubject5)
                    .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT6)
                    .addComponent(lblSubject6)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT7)
                    .addComponent(lblSubject7)
                    .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT8)
                    .addComponent(lblSubject8)
                    .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkT9)
                    .addComponent(lblSubject9)
                    .addComponent(txt9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkT10)
                        .addComponent(lblSubject10))
                    .addComponent(txt10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addGap(44, 44, 44)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cboCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboSemester, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(84, 84, 84)
                            .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnAdd))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        lblCourse.setText("course");

        lblSemester.setText("Semester");

        lblTeacher.setText("teacher");

        lblClass.setText("Class");

        lblClassName.setText("ClassName");

        lblRoomID.setText("RoomID");

        cboSubject.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        cboTeacher.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        lblSession1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSession1.setText("Class");

        lblSession2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblSession2.setText("Class");

        cboSession.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        cboLab.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblCourse)
                .addGap(51, 51, 51)
                .addComponent(lblSemester)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTeacher)
                        .addGap(46, 46, 46)
                        .addComponent(lblClass)
                        .addGap(54, 54, 54)
                        .addComponent(lblClassName)
                        .addGap(26, 26, 26)
                        .addComponent(lblRoomID)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(cboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboSession, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboLab, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSession1)
                        .addGap(29, 29, 29)
                        .addComponent(lblSession2)
                        .addGap(139, 139, 139))))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSession1)
                    .addComponent(lblSession2)
                    .addComponent(cboSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourse)
                    .addComponent(lblSemester)
                    .addComponent(lblTeacher)
                    .addComponent(lblClass)
                    .addComponent(lblClassName)
                    .addComponent(lblRoomID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String cl;
    int i =0;
    void clearLable(){
        lblClass.setText("");
        lblClassName.setText("");
        lblCourse.setText("");
        lblSemester.setText("");
        lblTeacher.setText("");
        lblRoomID.setText("");
    }
    
    void clearCountTeacher(){
        chkT1.setVisible(false);
        chkT2.setVisible(false);
        chkT3.setVisible(false);
        chkT4.setVisible(false);
        chkT5.setVisible(false);
        chkT6.setVisible(false);
        chkT7.setVisible(false);
        chkT8.setVisible(false);
        chkT9.setVisible(false);
        chkT10.setVisible(false);
        
        lblSubject1.setVisible(false);
        lblSubject2.setVisible(false);
        lblSubject3.setVisible(false);
        lblSubject4.setVisible(false);
        lblSubject5.setVisible(false);
        lblSubject6.setVisible(false);
        lblSubject7.setVisible(false);
        lblSubject8.setVisible(false);
        lblSubject9.setVisible(false);
        lblSubject10.setVisible(false);
        
        txt1.setVisible(false);
        txt2.setVisible(false);
        txt3.setVisible(false);
        txt4.setVisible(false);
        txt5.setVisible(false);
        txt6.setVisible(false);
        txt7.setVisible(false);
        txt8.setVisible(false);
        txt9.setVisible(false);
        txt10.setVisible(false);
        
        txt11.setVisible(false);
        txt12.setVisible(false);
        txt13.setVisible(false);
        txt14.setVisible(false);
        txt15.setVisible(false);
        txt16.setVisible(false);
        txt17.setVisible(false);
        txt18.setVisible(false);
        txt19.setVisible(false);
        txt20.setVisible(false);
    }
    void clearText(){
        txt1.setText("");
        txt2.setText("");
        txt3.setText("");
        txt4.setText("");
        txt5.setText("");
        txt6.setText("");
        txt7.setText("");
        txt8.setText("");
        txt9.setText("");
        txt10.setText("");
        txt11.setText("");
        txt12.setText("");
        txt13.setText("");
        txt14.setText("");
        txt15.setText("");
        txt16.setText("");
        txt17.setText("");
        txt18.setText("");
        txt19.setText("");
        txt20.setText("");
        txtMonday1.setText("");
        txtMonday2.setText("");
        txtTuesday1.setText("");
        txtTuesday2.setText("");
        txtWednesday1.setText("");
        txtWednesday2.setText("");
        txtThursday1.setText("");
        txtThursday2.setText("");
        txtFriday1.setText("");
        txtFriday2.setText("");
        txtSaturday1.setText("");
        txtSaturday2.setText("");
    }
    void countTeacher(){
        try {
                clsCon.setRs(clsCon.getStmt().executeQuery("Select count(TeacherID) from qTeacherCourseShift where ShiftName like '"+cl+"*"+"' and  CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"' and Active = 1"));        
                clsCon.getRs().first();
                int in = cboTeacher.getItemCount();
                in -=1;
                if(cboClass.getSelectedItem().equals("--- Select ---")) cboClass.setVisible(true);
                else{
                switch(in){
                    case 1:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        txt1.setText(cboSession.getItemAt(1));
                        txt11.setText(cboLab.getItemAt(1));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));                        
                        break;
                    case 2:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        break;
                    case 3:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        break;
                    case 4:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        break;
                    case 5:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        break;
                    case 6:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        chkT6.setVisible(true);
                        chkT6.setText(cboTeacher.getItemAt(6));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt6.setText(cboSession.getItemAt(6));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        txt16.setText(cboLab.getItemAt(6));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        lblSubject6.setVisible(true);
                        lblSubject6.setText(cboSubject.getItemAt(6));
                        break;
                    case 7:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        chkT6.setVisible(true);
                        chkT6.setText(cboTeacher.getItemAt(6));
                        chkT7.setVisible(true);
                        chkT7.setText(cboTeacher.getItemAt(7));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt6.setText(cboSession.getItemAt(6));
                        txt7.setText(cboSession.getItemAt(7));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        txt16.setText(cboLab.getItemAt(6));
                        txt17.setText(cboLab.getItemAt(7));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        lblSubject6.setVisible(true);
                        lblSubject6.setText(cboSubject.getItemAt(6));
                        lblSubject7.setVisible(true);
                        lblSubject7.setText(cboSubject.getItemAt(7));
                        break;
                    case 8:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        chkT6.setVisible(true);
                        chkT6.setText(cboTeacher.getItemAt(6));
                        chkT7.setVisible(true);
                        chkT7.setText(cboTeacher.getItemAt(7));
                        chkT8.setVisible(true);
                        chkT8.setText(cboTeacher.getItemAt(8));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt6.setText(cboSession.getItemAt(6));
                        txt7.setText(cboSession.getItemAt(7));
                        txt8.setText(cboSession.getItemAt(8));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        txt16.setText(cboLab.getItemAt(6));
                        txt17.setText(cboLab.getItemAt(7));
                        txt18.setText(cboLab.getItemAt(8));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        lblSubject6.setVisible(true);
                        lblSubject6.setText(cboSubject.getItemAt(6));
                        lblSubject7.setVisible(true);
                        lblSubject7.setText(cboSubject.getItemAt(7));
                        lblSubject8.setVisible(true);
                        lblSubject8.setText(cboSubject.getItemAt(8));
                        break;
                    case 9:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        chkT6.setVisible(true);
                        chkT6.setText(cboTeacher.getItemAt(6));
                        chkT7.setVisible(true);
                        chkT7.setText(cboTeacher.getItemAt(7));
                        chkT8.setVisible(true);
                        chkT8.setText(cboTeacher.getItemAt(8));
                        chkT9.setVisible(true);
                        chkT9.setText(cboTeacher.getItemAt(9));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt6.setText(cboSession.getItemAt(6));
                        txt7.setText(cboSession.getItemAt(7));
                        txt8.setText(cboSession.getItemAt(8));
                        txt9.setText(cboSession.getItemAt(9));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        txt16.setText(cboLab.getItemAt(6));
                        txt17.setText(cboLab.getItemAt(7));
                        txt18.setText(cboLab.getItemAt(8));
                        txt19.setText(cboLab.getItemAt(9));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        lblSubject6.setVisible(true);
                        lblSubject6.setText(cboSubject.getItemAt(6));
                        lblSubject7.setVisible(true);
                        lblSubject7.setText(cboSubject.getItemAt(7));
                        lblSubject8.setVisible(true);
                        lblSubject8.setText(cboSubject.getItemAt(8));
                        lblSubject9.setVisible(true);
                        lblSubject9.setText(cboSubject.getItemAt(9));
                        break;
                    case 10:
                        chkT1.setVisible(true);
                        chkT1.setText(cboTeacher.getItemAt(1));
                        chkT2.setVisible(true);
                        chkT2.setText(cboTeacher.getItemAt(2));
                        chkT3.setVisible(true);
                        chkT3.setText(cboTeacher.getItemAt(3));
                        chkT4.setVisible(true);
                        chkT4.setText(cboTeacher.getItemAt(4));
                        chkT5.setVisible(true);
                        chkT5.setText(cboTeacher.getItemAt(5));
                        chkT6.setVisible(true);
                        chkT6.setText(cboTeacher.getItemAt(6));
                        chkT7.setVisible(true);
                        chkT7.setText(cboTeacher.getItemAt(7));
                        chkT8.setVisible(true);
                        chkT8.setText(cboTeacher.getItemAt(8));
                        chkT9.setVisible(true);
                        chkT9.setText(cboTeacher.getItemAt(9));
                        chkT10.setVisible(true);
                        chkT10.setText(cboTeacher.getItemAt(10));
                        txt1.setText(cboSession.getItemAt(1));
                        txt2.setText(cboSession.getItemAt(2));
                        txt3.setText(cboSession.getItemAt(3));
                        txt4.setText(cboSession.getItemAt(4));
                        txt5.setText(cboSession.getItemAt(5));
                        txt6.setText(cboSession.getItemAt(6));
                        txt7.setText(cboSession.getItemAt(7));
                        txt8.setText(cboSession.getItemAt(8));
                        txt9.setText(cboSession.getItemAt(9));
                        txt10.setText(cboSession.getItemAt(10));
                        txt11.setText(cboLab.getItemAt(1));
                        txt12.setText(cboLab.getItemAt(2));
                        txt13.setText(cboLab.getItemAt(3));
                        txt14.setText(cboLab.getItemAt(4));
                        txt15.setText(cboLab.getItemAt(5));
                        txt16.setText(cboLab.getItemAt(6));
                        txt17.setText(cboLab.getItemAt(7));
                        txt18.setText(cboLab.getItemAt(8));
                        txt19.setText(cboLab.getItemAt(9));
                        txt20.setText(cboLab.getItemAt(10));
                        lblSubject1.setVisible(true);
                        lblSubject1.setText(cboSubject.getItemAt(1));
                        lblSubject2.setVisible(true);
                        lblSubject2.setText(cboSubject.getItemAt(2));
                        lblSubject3.setVisible(true);
                        lblSubject3.setText(cboSubject.getItemAt(3));
                        lblSubject4.setVisible(true);
                        lblSubject4.setText(cboSubject.getItemAt(4));
                        lblSubject5.setVisible(true);
                        lblSubject5.setText(cboSubject.getItemAt(5));
                        lblSubject6.setVisible(true);
                        lblSubject6.setText(cboSubject.getItemAt(6));
                        lblSubject7.setVisible(true);
                        lblSubject7.setText(cboSubject.getItemAt(7));
                        lblSubject8.setVisible(true);
                        lblSubject8.setText(cboSubject.getItemAt(8));
                        lblSubject9.setVisible(true);
                        lblSubject9.setText(cboSubject.getItemAt(9));
                        lblSubject10.setVisible(true);
                        lblSubject10.setText(cboSubject.getItemAt(10));
                        break;
                }}
                
        } catch (Exception e) {
        }
    }
    /////////////////////// Cambobox Course ////////////////////
    void getCboCourse(){        
        cboCourse.removeAllItems();
        cboCourse.addItem("--- Select ---");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("select * from tblCourse"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboCourse.addItem(clsCon.getRs().getString("CourseName"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }
    }
    void showCourseIdToLabel(){ 
        cboCourse.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                cboSemester.setEnabled(false);
                lblCourse.setText("");
                if(cboCourse.getSelectedItem().equals("--- Select ---"))
                    return;
               String c=(String) cboCourse.getSelectedItem();
               try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select CourseID from tblCourse where CourseName='"+c+"'"));
                    clsCon.getRs().first();
                    lblCourse.setText(clsCon.getRs().getString("CourseID"));
                    getCboTeacher();
                    getCboSemester();
                    countTeacher();
                    cboSemester.setEnabled(true);
                } catch (SQLException ex) {
                }
            }
        });
    }
    /////////////////////// Cambobox Semester ////////////////////
    void getCboSemester(){   
        cboSemester.removeAllItems();
        cboSemester.addItem("--- Select ---");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("select Semester,SemesterID from qSubjectCourse Where CourseID = "+lblCourse.getText()+" group by Semester,SemesterID order by Semester"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboSemester.addItem(clsCon.getRs().getString("Semester"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }        
    }
    void showSemesterIdToLabel(){ 
        cboSemester.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                lblSemester.setText("");
                cboClass.setEnabled(false);
                txtSaturday1.setBackground(Color.white);
                txtSaturday2.setBackground(Color.white);
                int i = cboSemester.getSelectedIndex();
                if(i == 0)
                    return;
                String c=(String) cboSemester.getSelectedItem();
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select SemesterID from tblSemester where Semester='"+c+"'"));
                    clsCon.getRs().first();
                    lblSemester.setText(clsCon.getRs().getString("SemesterID"));
                    getCboTeacher();
                    getCboClass();
                    cboClass.setEnabled(true);
                    
                    for(int k=5; k<9; k++){
                        if(lblSemester.getText().equals("Se00"+k)){
                            txtSaturday1.setBackground(Color.red);
                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                    countTeacher();
                } catch (SQLException ex) {
                }
                
            }
        });
    }
    /////////////////////// Cambobox Teacher ////////////////////
    void getCboTeacher(){ 
        cboTeacher.removeAllItems();
        cboTeacher.addItem("--- Select ---");
        cboSubject.removeAllItems();
        cboSubject.addItem("--- Select ---");
        cboSession.removeAllItems();
        cboSession.addItem("--- Select ---");
        cl = lblClassName.getText().substring(0,1);
        if(cl.equals("S"))
            cl = "A";
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("Select TeacherID, Name,SubjectName,StudySessions,AmountLab from qTeacherCourseShift where ShiftName like '"+cl+"*"+"' and  CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"'and Active=1 group by TeacherID, Name,SubjectName,StudySessions,AmountLab"));
                clsCon.getRs().first();
                lblTeacher.setText(clsCon.getRs().getString("TeacherID"));
                if(clsCon.getRs().first())
                    do{
                        cboTeacher.addItem(clsCon.getRs().getString("Name"));
                        cboSubject.addItem(clsCon.getRs().getString("SubjectName"));
                        cboSession.addItem(clsCon.getRs().getString("StudySessions"));
                        cboLab.addItem(clsCon.getRs().getString("AmountLab"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }          
    }
    void showTeacherIdToLabel(){         
        cboTeacher.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                lblTeacher.setText("");
                clearCountTeacher();
                String c=(String) cboTeacher.getSelectedItem();
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select * from qTeacher where Name='"+c+"'"));
                    clsCon.getRs().first();
                    lblTeacher.setText(clsCon.getRs().getString("TeacherID"));
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                
                String name = (String) cboTeacher.getSelectedItem();
               try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select * from qTeacherTime where Name='"+name+"' and Active=1 and ShiftName like '"+cl+"*"+"'"));
                    clsCon.getRs().first();
                    
                    for(int k=5; k<9; k++){
                        if(lblSemester.getText().equals("Se00"+k)){
                            txtSaturday1.setBackground(Color.red);
                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                } catch (SQLException ex) {
                }
            }
        });
    }
    /////////////////////// Cambobox Class ////////////////////
    void getCboClass(){        
        cboClass.removeAllItems();
        cboClass.addItem("--- Select ---");
        lblClass.setText("");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("Select ClassName,ClassID from qStu Where CourseName = '"+(String) cboCourse.getSelectedItem()+"' and SemesterID = '"+lblSemester.getText()+"' and Active = 1 Group By ClassName,ClassID"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboClass.addItem(clsCon.getRs().getString("ClassName"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }
    }
    void showClassIdToLabel(){ 
        cboClass.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) { 
                cboTeacher.setEnabled(false);
                String c=(String) cboClass.getSelectedItem(); 
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select ClassID from tblClass where ClassName='"+c+"'"));
                    clsCon.getRs().first();
                    lblClass.setText(clsCon.getRs().getString("ClassID"));
                    lblClassName.setText(c);
                    getCboTeacher();
                    cboTeacher.setEnabled(true);
                    
                    for(int k=5; k<9; k++){
                        if(lblSemester.getText().equals("Se00"+k)){
                            txtSaturday1.setBackground(Color.red);
                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                    countTeacher();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        cboCourse.setSelectedIndex(0);
        cboSemester.setSelectedIndex(0);
        cboClass.setSelectedIndex(0);

        clearText();
        clearCountTeacher();
    }//GEN-LAST:event_btnNewActionPerformed
    int k;
    String Day1, Day2,Day3,Day4,Day5,Day6;
    String Tea1, Tea2,Tea3,Tea4,Tea5,Tea6;
    String shift;
    void Insert(String s){
        try {
            String sql = s;
            clsCon.getStmt().executeUpdate(sql);
        } catch (Exception e) {
        }
    }
    void Update(String s){
        try {
                String sql = s;
                clsCon.getStmt().executeUpdate(sql);
            } catch (Exception e) {
            }
    }
    void submit(JCheckBox chk,JTextField txt, JLabel lbl,JTextField txt1){
        if(chk.isSelected()&&Integer.parseInt(txt1.getText())==0){
            k = 0;
            int l = Integer.parseInt(txt.getText());
            try {
                clsCon.setRs(clsCon.getStmt().executeQuery("Select * from qTeacherTime where Name='"+chk.getText()+"' and Active = 1 and ShiftName Like '"+cl+"*"+"'"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        lblTeacher.setText(clsCon.getRs().getString("TeacherID"));
                        shift = (String) clsCon.getRs().getString("ShiftID");
                        if(k<l){
                            if(clsCon.getRs().getString("Day").equals("Monday")){
                                Day1 = "Da001";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtMonday1.getText().equals("")){
                                    txtMonday1.setText(lbl.getText());  k++;
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day1+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day1+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtMonday2.getText().equals("")){
                                    txtMonday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day1+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day1+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Tuesday")){
                                Day2 = "Da002";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtTuesday1.getText().equals("")){
                                    txtTuesday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day2+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day2+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtTuesday2.getText().equals("")){
                                    txtTuesday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day2+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day2+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Wednesday")){
                                Day3 = "Da003";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtWednesday1.getText().equals("")){
                                    txtWednesday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day3+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day3+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtWednesday2.getText().equals("")){
                                    txtWednesday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day3+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day3+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Thursday")){
                                Day4 = "Da004";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtThursday1.getText().equals("")){
                                    txtThursday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day4+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day4+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtThursday2.getText().equals("")){
                                    txtThursday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day4+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day4+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Friday")){
                                Day5 = "Da005";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtFriday1.getText().equals("")){
                                    txtFriday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day5+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day5+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtFriday2.getText().equals("")){
                                    txtFriday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day5+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day5+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Saturday")){
                                Day6 = "Da006";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtSaturday1.getText().equals("")){
                                    txtSaturday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day6+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day6+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtSaturday2.getText().equals("")){
                                    txtSaturday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 1 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day6+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day6+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                        }                        
                    }while (clsCon.getRs().next());
            } catch (Exception e) {
            }
        }
        if(chk.isSelected()&&Integer.parseInt(txt1.getText())>0){
            k = 0;
            int l = Integer.parseInt(txt.getText());
            try {
                clsCon.setRs(clsCon.getStmt().executeQuery("Select * from qTeacherTime where Name='"+chk.getText()+"' and Active = 1 and ShiftName Like '"+cl+"*"+"'"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        lblTeacher.setText(clsCon.getRs().getString("TeacherID"));
                        shift = (String) clsCon.getRs().getString("ShiftID");
                        if(k<l){
                            if(clsCon.getRs().getString("Day").equals("Monday")){
                                Day1 = "Da001";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtMonday1.getText().equals("")){
                                    txtMonday1.setText(lbl.getText());  k++;
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day1+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day1+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtMonday2.getText().equals("")){
                                    txtMonday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day1+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day1+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day1+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Tuesday")){
                                Day2 = "Da002";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtTuesday1.getText().equals("")){
                                    txtTuesday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day2+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day2+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtTuesday2.getText().equals("")){
                                    txtTuesday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day2+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day2+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day2+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Wednesday")){
                                Day3 = "Da003";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtWednesday1.getText().equals("")){
                                    txtWednesday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day3+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day3+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtWednesday2.getText().equals("")){
                                    txtWednesday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day3+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day3+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day3+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Thursday")){
                                Day4 = "Da004";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtThursday1.getText().equals("")){
                                    txtThursday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day4+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day4+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtThursday2.getText().equals("")){
                                    txtThursday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day4+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day4+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day4+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Friday")){
                                Day5 = "Da005";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtFriday1.getText().equals("")){
                                    txtFriday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day5+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day5+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtFriday2.getText().equals("")){
                                    txtFriday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day5+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day5+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day5+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                            if(clsCon.getRs().getString("Day").equals("Saturday")){
                                Day6 = "Da006";
                                if(clsCon.getRs().getString("SessionName").equals("Session1")&&txtSaturday1.getText().equals("")){
                                    txtSaturday1.setText(lbl.getText()); k++; 
                                    lblSession1.setText("Ses01");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession1.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession1.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession1.getText()+"','"+Day6+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day6+"' and SessionID='"+lblSession1.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                                if(clsCon.getRs().getString("SessionName").equals("Session2")&&txtSaturday2.getText().equals("")){
                                    txtSaturday2.setText(lbl.getText());  k++;
                                    lblSession2.setText("Ses02");
                                    clCon.setR(clCon.getSt().executeQuery("Select RoomID, RoomType from qRoom Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession2.getText()+"' and RoomType = 2 and Active =1 group by RoomID, RoomType order by RoomID"));
                                    clCon.getR().first();
                                    lblRoomID.setText(clCon.getR().getString("RoomID"));
                                    Update("update tblClassRoom set Active = 0 Where ShiftID='"+shift+"' and DayID='"+Day6+"'  and SessionID='"+lblSession2.getText()+"' and RoomID = '"+lblRoomID.getText()+"'");
                                    Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+lblTeacher.getText()+"','"+lblSession2.getText()+"','"+Day6+"','"+shift+"','"+lblRoomID.getText()+"',1)");
                                    Update("update tblTeacherTime set Active=2 where TeacherID='"+lblTeacher.getText()+"' and ShiftID='"+shift+"' and DayID='"+Day6+"' and SessionID='"+lblSession2.getText()+"'");
                                    Update("update tblClass set Active = 0 where ClassID='"+lblClass.getText()+"'");
                                }
                            }
                        }                        
                    }while (clsCon.getRs().next());
            } catch (Exception e) {
            }
        }
    }
    void getDataToTable(){
        String shift = ((String) cboClass.getSelectedItem()).substring(0, 1);
        if(shift.equals("S"))
            shift = "A";
        
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("Select TeacherID, Name,SubjectName,StudySessions,AmountLab from qTeacherCourseShift Where ShiftName like '"+shift+"*"+"' and  CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"'and Active=1 and Day like 'T*' group by TeacherID, Name,SubjectName,StudySessions,AmountLab"));
            clsCon.getRs().first();
        } catch (Exception e) {
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        submit(chkT1,txt1,lblSubject1,txt11);      submit(chkT6,txt6,lblSubject6,txt16);
        submit(chkT2,txt2,lblSubject2,txt12);      submit(chkT7,txt7,lblSubject7,txt17);
        submit(chkT3,txt3,lblSubject3,txt13);      submit(chkT8,txt8,lblSubject7,txt18);
        submit(chkT4,txt4,lblSubject4,txt14);      submit(chkT9,txt9,lblSubject9,txt19);
        submit(chkT5,txt5,lblSubject5,txt15);      submit(chkT10,txt10,lblSubject10,txt20);
        JOptionPane.showMessageDialog(this, "This record was saved");
    }//GEN-LAST:event_btnAddActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       try {
            clsCon.getCon().close(); 
            clCon.getCon().close(); 
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            clsCon.getCon().close(); 
            clCon.getCon().close();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void cboSemesterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboSemesterFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSemesterFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lblClass.setVisible(false);
        lblClassName.setVisible(false);
        lblCourse.setVisible(false);
        lblSemester.setVisible(false);
        lblTeacher.setVisible(false);
        lblRoomID.setVisible(false);
        lblSession1.setVisible(false);
        lblSession2.setVisible(false);
        cboSession.setVisible(false);
        cboLab.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextField1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1AncestorAdded

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void txtSesion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSesion2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSesion2ActionPerformed

    private void txtSesion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSesion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSesion1ActionPerformed

    private void txtMonday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonday1ActionPerformed
        JOptionPane.showConfirmDialog(this, "Hello");
    }//GEN-LAST:event_txtMonday1ActionPerformed

    private void txtMonday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonday2ActionPerformed

    private void txtTuesday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTuesday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTuesday1ActionPerformed

    private void txtTuesday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTuesday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTuesday2ActionPerformed

    private void txtWednesday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWednesday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWednesday1ActionPerformed

    private void txtWednesday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWednesday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWednesday2ActionPerformed

    private void txtThursday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThursday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThursday1ActionPerformed

    private void txtThursday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThursday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThursday2ActionPerformed

    private void txtFriday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFriday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFriday1ActionPerformed

    private void txtFriday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFriday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFriday2ActionPerformed

    private void txtSaturday1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaturday1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaturday1ActionPerformed

    private void txtSaturday2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaturday2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaturday2ActionPerformed

    private void chkT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT1ActionPerformed
        if(chkT1.isSelected()){            
            if(lblSubject1.getText().equals(lblSubject2.getText())){
                chkT2.setSelected(false); chkT2.setEnabled(false); lblSubject2.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject3.getText())){
                chkT3.setSelected(false); chkT3.setEnabled(false); lblSubject3.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject4.getText())){
                chkT4.setSelected(false); chkT4.setEnabled(false); lblSubject4.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject5.getText())){
                chkT5.setSelected(false); chkT5.setEnabled(false); lblSubject5.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject6.getText())){
                chkT6.setSelected(false); chkT6.setEnabled(false); lblSubject6.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject7.getText())){
                chkT7.setSelected(false); chkT7.setEnabled(false); lblSubject7.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject8.getText())){
                chkT8.setSelected(false); chkT8.setEnabled(false); lblSubject8.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject9.getText())){
                chkT9.setSelected(false); chkT9.setEnabled(false); lblSubject9.setEnabled(false);
            }
            if(lblSubject1.getText().equals(lblSubject10.getText())){
                chkT10.setSelected(false); chkT10.setEnabled(false); lblSubject10.setEnabled(false);
            }  
        }
        else{
            if(lblSubject1.getText().equals(lblSubject2.getText())){
                chkT2.setSelected(false); chkT2.setEnabled(true); lblSubject2.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject3.getText())){
                chkT3.setSelected(false); chkT3.setEnabled(true); lblSubject3.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject4.getText())){
                chkT4.setSelected(false); chkT4.setEnabled(true); lblSubject4.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject5.getText())){
                chkT5.setSelected(false); chkT5.setEnabled(true); lblSubject5.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject6.getText())){
                chkT6.setSelected(false); chkT6.setEnabled(true); lblSubject6.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject7.getText())){
                chkT7.setSelected(false); chkT7.setEnabled(true); lblSubject7.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject8.getText())){
                chkT8.setSelected(false); chkT8.setEnabled(true); lblSubject8.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject9.getText())){
                chkT9.setSelected(false); chkT9.setEnabled(true); lblSubject9.setEnabled(true);
            }
            if(lblSubject1.getText().equals(lblSubject10.getText())){
                chkT10.setSelected(false); chkT10.setEnabled(true); lblSubject10.setEnabled(true);
            }
        }
    }//GEN-LAST:event_chkT1ActionPerformed

    private void chkT2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT2ActionPerformed
    if(chkT2.isSelected()){            
        if(lblSubject2.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject2.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject2.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject2.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT2ActionPerformed

    private void chkT3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT3ActionPerformed
        if(chkT3.isSelected()){            
        if(lblSubject3.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject3.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject3.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject3.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT3ActionPerformed

    private void chkT4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT4ActionPerformed
        if(chkT4.isSelected()){            
        if(lblSubject4.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject4.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject4.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject4.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT4ActionPerformed

    private void chkT5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT5ActionPerformed
        if(chkT5.isSelected()){            
        if(lblSubject5.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject5.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject5.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject5.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT5ActionPerformed

    private void chkT6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT6ActionPerformed
        if(chkT6.isSelected()){            
        if(lblSubject6.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject6.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject6.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject6.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT6ActionPerformed

    private void chkT7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT7ActionPerformed
        if(chkT7.isSelected()){            
        if(lblSubject7.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject7.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject7.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject7.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT7ActionPerformed

    private void chkT8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT8ActionPerformed
        if(chkT8.isSelected()){            
        if(lblSubject8.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject8.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject8.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject8.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT8ActionPerformed

    private void chkT9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT9ActionPerformed
        if(chkT9.isSelected()){            
        if(lblSubject9.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false);lblSubject2.setEnabled(false);}
        if(lblSubject9.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(false); lblSubject10.setEnabled(false);} 
    }
    else{
        if(lblSubject9.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
        if(lblSubject9.getText().equals(lblSubject10.getText())){chkT10.setSelected(false);chkT10.setEnabled(true);lblSubject10.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT9ActionPerformed

    private void chkT10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkT10ActionPerformed
        if(chkT10.isSelected()){            
        if(lblSubject10.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(false);lblSubject1.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(false);lblSubject3.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(false);lblSubject4.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(false);lblSubject5.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(false);lblSubject6.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(false);lblSubject7.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(false);lblSubject8.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(false);lblSubject9.setEnabled(false);}
        if(lblSubject10.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(false); lblSubject2.setEnabled(false);} 
    }
    else{
        if(lblSubject10.getText().equals(lblSubject1.getText())){chkT1.setSelected(false);chkT1.setEnabled(true);lblSubject1.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject3.getText())){chkT3.setSelected(false);chkT3.setEnabled(true);lblSubject3.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject4.getText())){chkT4.setSelected(false);chkT4.setEnabled(true);lblSubject4.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject5.getText())){chkT5.setSelected(false);chkT5.setEnabled(true);lblSubject5.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject6.getText())){chkT6.setSelected(false);chkT6.setEnabled(true);lblSubject6.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject7.getText())){chkT7.setSelected(false);chkT7.setEnabled(true);lblSubject7.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject8.getText())){chkT8.setSelected(false);chkT8.setEnabled(true);lblSubject8.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject9.getText())){chkT9.setSelected(false);chkT9.setEnabled(true);lblSubject9.setEnabled(true);}
        if(lblSubject10.getText().equals(lblSubject2.getText())){chkT2.setSelected(false);chkT2.setEnabled(true);lblSubject2.setEnabled(true);}
    }
    }//GEN-LAST:event_chkT10ActionPerformed

    private void txt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt8ActionPerformed

    private void txt18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt18ActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgTimeTable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgTimeTable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgTimeTable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgTimeTable2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgTimeTable2 dialog = new dlgTimeTable2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                        try {
                            clsCon.getCon().close(); 
                            clCon.getCon().close();
                        } catch (SQLException ex) {
                        }
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox<String> cboClass;
    private javax.swing.JComboBox<String> cboCourse;
    private javax.swing.JComboBox<String> cboLab;
    private javax.swing.JComboBox<String> cboSemester;
    private javax.swing.JComboBox<String> cboSession;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JComboBox<String> cboTeacher;
    private javax.swing.JCheckBox chkT1;
    private javax.swing.JCheckBox chkT10;
    private javax.swing.JCheckBox chkT2;
    private javax.swing.JCheckBox chkT3;
    private javax.swing.JCheckBox chkT4;
    private javax.swing.JCheckBox chkT5;
    private javax.swing.JCheckBox chkT6;
    private javax.swing.JCheckBox chkT7;
    private javax.swing.JCheckBox chkT8;
    private javax.swing.JCheckBox chkT9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblClassName;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblRoomID;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblSession1;
    private javax.swing.JLabel lblSession2;
    private javax.swing.JLabel lblSubject1;
    private javax.swing.JLabel lblSubject10;
    private javax.swing.JLabel lblSubject2;
    private javax.swing.JLabel lblSubject3;
    private javax.swing.JLabel lblSubject4;
    private javax.swing.JLabel lblSubject5;
    private javax.swing.JLabel lblSubject6;
    private javax.swing.JLabel lblSubject7;
    private javax.swing.JLabel lblSubject8;
    private javax.swing.JLabel lblSubject9;
    private javax.swing.JLabel lblTeacher;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt10;
    private javax.swing.JTextField txt11;
    private javax.swing.JTextField txt12;
    private javax.swing.JTextField txt13;
    private javax.swing.JTextField txt14;
    private javax.swing.JTextField txt15;
    private javax.swing.JTextField txt16;
    private javax.swing.JTextField txt17;
    private javax.swing.JTextField txt18;
    private javax.swing.JTextField txt19;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt20;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    private javax.swing.JTextField txt8;
    private javax.swing.JTextField txt9;
    private javax.swing.JTextField txtFriday1;
    private javax.swing.JTextField txtFriday2;
    private javax.swing.JTextField txtMonday1;
    private javax.swing.JTextField txtMonday2;
    private javax.swing.JTextField txtSaturday1;
    private javax.swing.JTextField txtSaturday2;
    private javax.swing.JTextField txtSesion1;
    private javax.swing.JTextField txtSesion2;
    private javax.swing.JTextField txtThursday1;
    private javax.swing.JTextField txtThursday2;
    private javax.swing.JTextField txtTuesday1;
    private javax.swing.JTextField txtTuesday2;
    private javax.swing.JTextField txtWednesday1;
    private javax.swing.JTextField txtWednesday2;
    // End of variables declaration//GEN-END:variables
}
