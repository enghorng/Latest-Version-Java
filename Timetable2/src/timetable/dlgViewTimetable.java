/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetable;

import com.sun.javafx.scene.control.SelectedCellsMap;
import com.sun.org.apache.bcel.internal.generic.ObjectType;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author DELL
 */
public class dlgViewTimetable extends javax.swing.JDialog {

    /**
     * Creates new form dlgViewTimetable
     */
    public dlgViewTimetable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        clsCon.inti();
        this.setSize(1459, 570);
        
        getCboCourse(); 
       // getCboSubject();
        showCourseIdToLabel();       
        showSemesterIdToLabel();      
        showClassIdToLabel();
        showSubjectToLabel();
        
        cboSemester.setEnabled(false);
        cboClass.setEnabled(false);

        cboSemester.removeAllItems();
        cboSemester.addItem("--- Select ---");
        cboClass.removeAllItems();
        cboClass.addItem("--- Select ---");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cboCourse = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboSemester = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox<>();
        lblClass = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        lblCourse = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        txtArea15 = new javax.swing.JTextArea();
        txtSession1 = new javax.swing.JTextArea();
        txtSession2 = new javax.swing.JTextArea();
        jPanel20 = new javax.swing.JPanel();
        txtArea21 = new javax.swing.JTextArea();
        txtMonday1 = new javax.swing.JTextArea();
        txtMonday2 = new javax.swing.JTextArea();
        jPanel21 = new javax.swing.JPanel();
        txtArea24 = new javax.swing.JTextArea();
        txtWednesday1 = new javax.swing.JTextArea();
        txtWednesday2 = new javax.swing.JTextArea();
        jPanel24 = new javax.swing.JPanel();
        txtArea33 = new javax.swing.JTextArea();
        txtSaturday1 = new javax.swing.JTextArea();
        txtSaturday2 = new javax.swing.JTextArea();
        jPanel19 = new javax.swing.JPanel();
        txtArea18 = new javax.swing.JTextArea();
        txtTuesday1 = new javax.swing.JTextArea();
        txtTuesday2 = new javax.swing.JTextArea();
        jPanel22 = new javax.swing.JPanel();
        txtArea27 = new javax.swing.JTextArea();
        txtThursday1 = new javax.swing.JTextArea();
        txtThursday2 = new javax.swing.JTextArea();
        jPanel23 = new javax.swing.JPanel();
        txtArea30 = new javax.swing.JTextArea();
        txtFriday1 = new javax.swing.JTextArea();
        txtFriday2 = new javax.swing.JTextArea();
        btnEdit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboTeacher = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Course");

        cboCourse.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Semester");

        cboSemester.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboSemester.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboSemesterFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Class");

        cboClass.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        lblClass.setText("Class");

        lblSemester.setText("Semester");

        lblCourse.setText("course");

        jPanel5.setBackground(new java.awt.Color(255, 153, 51));

        jPanel18.setBackground(new java.awt.Color(255, 153, 51));
        jPanel18.setFocusable(false);

        txtArea15.setColumns(20);
        txtArea15.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea15.setRows(5);
        txtArea15.setText("\nTime");
        txtArea15.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea15.setFocusable(false);

        txtSession1.setColumns(20);
        txtSession1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSession1.setRows(5);
        txtSession1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSession1.setFocusable(false);

        txtSession2.setColumns(20);
        txtSession2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSession2.setRows(5);
        txtSession2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSession2.setFocusable(false);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea15, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSession1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSession2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSession1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSession2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(255, 153, 51));
        jPanel20.setFocusable(false);

        txtArea21.setColumns(20);
        txtArea21.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea21.setRows(5);
        txtArea21.setText("\nMonday");
        txtArea21.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea21.setFocusable(false);

        txtMonday1.setColumns(20);
        txtMonday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMonday1.setRows(5);
        txtMonday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMonday1.setFocusable(false);

        txtMonday2.setColumns(20);
        txtMonday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMonday2.setRows(5);
        txtMonday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMonday2.setFocusable(false);

        jPanel21.setBackground(new java.awt.Color(255, 153, 51));
        jPanel21.setFocusable(false);

        txtArea24.setColumns(20);
        txtArea24.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea24.setRows(5);
        txtArea24.setText("\nWednesday\n");
        txtArea24.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea24.setFocusable(false);

        txtWednesday1.setColumns(20);
        txtWednesday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtWednesday1.setRows(5);
        txtWednesday1.setText("\n");
        txtWednesday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtWednesday1.setFocusable(false);

        txtWednesday2.setColumns(20);
        txtWednesday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtWednesday2.setRows(5);
        txtWednesday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtWednesday2.setFocusable(false);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea24, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtWednesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtWednesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea24, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtWednesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtWednesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel24.setBackground(new java.awt.Color(255, 153, 51));
        jPanel24.setFocusable(false);

        txtArea33.setColumns(20);
        txtArea33.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea33.setRows(5);
        txtArea33.setText("\nSaturday");
        txtArea33.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea33.setFocusable(false);

        txtSaturday1.setColumns(20);
        txtSaturday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSaturday1.setRows(5);
        txtSaturday1.setText("\n");
        txtSaturday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSaturday1.setFocusable(false);

        txtSaturday2.setColumns(20);
        txtSaturday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSaturday2.setRows(5);
        txtSaturday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSaturday2.setFocusable(false);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea33, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSaturday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtSaturday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea33, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSaturday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSaturday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel19.setBackground(new java.awt.Color(255, 153, 51));
        jPanel19.setFocusable(false);

        txtArea18.setColumns(20);
        txtArea18.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea18.setRows(5);
        txtArea18.setText("\nTuesday");
        txtArea18.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea18.setFocusable(false);

        txtTuesday1.setColumns(20);
        txtTuesday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTuesday1.setRows(5);
        txtTuesday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTuesday1.setFocusable(false);

        txtTuesday2.setColumns(20);
        txtTuesday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTuesday2.setRows(5);
        txtTuesday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTuesday2.setFocusable(false);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea18, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtTuesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtTuesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea18, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtTuesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtTuesday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel22.setBackground(new java.awt.Color(255, 153, 51));
        jPanel22.setFocusable(false);

        txtArea27.setColumns(20);
        txtArea27.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea27.setRows(5);
        txtArea27.setText("\nThursday\n");
        txtArea27.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea27.setFocusable(false);

        txtThursday1.setColumns(20);
        txtThursday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtThursday1.setRows(5);
        txtThursday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtThursday1.setFocusable(false);

        txtThursday2.setColumns(20);
        txtThursday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtThursday2.setRows(5);
        txtThursday2.setText("\n");
        txtThursday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtThursday2.setFocusable(false);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea27, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtThursday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtThursday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea27, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtThursday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtThursday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel23.setBackground(new java.awt.Color(255, 153, 51));
        jPanel23.setFocusable(false);

        txtArea30.setColumns(20);
        txtArea30.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtArea30.setRows(5);
        txtArea30.setText("\nFriday\n");
        txtArea30.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtArea30.setFocusable(false);

        txtFriday1.setColumns(20);
        txtFriday1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtFriday1.setRows(5);
        txtFriday1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtFriday1.setFocusable(false);

        txtFriday2.setColumns(20);
        txtFriday2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtFriday2.setRows(5);
        txtFriday2.setText("\n");
        txtFriday2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtFriday2.setFocusable(false);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtArea30, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtFriday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtFriday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtArea30, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtFriday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtFriday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArea21, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonday1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonday2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(txtArea21, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtMonday1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtMonday2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Subject");

        cboSubject.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select ---" }));
        cboSubject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboSubjectFocusLost(evt);
            }
        });
        cboSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboSubjectMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Teacher");

        cboTeacher.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboTeacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select ---" }));
        cboTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboTeacherMouseClicked(evt);
            }
        });
        cboTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTeacherActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3))
                            .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEdit)
                                .addGap(27, 27, 27)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCourse)
                                .addGap(45, 45, 45)
                                .addComponent(lblSemester)
                                .addGap(43, 43, 43)
                                .addComponent(lblClass)
                                .addGap(137, 137, 137))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(71, 71, 71)
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel6)
                        .addGap(71, 71, 71)
                        .addComponent(cboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnSubmit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEdit)
                        .addComponent(lblCourse)
                        .addComponent(lblSemester)
                        .addComponent(lblClass)
                        .addComponent(btnDelete)))
                .addGap(47, 47, 47)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(cboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void clearText(){
        String cl = ((String)cboClass.getSelectedItem()).substring(0,1);
        if(cl.equals("A")||cl.equals("S")){
            txtSession1.setText("2:00 - 3:30");
            txtSession2.setText("3:45 - 5:15");
        }
        else if(cl.equals("M")){
            txtSession1.setText("7:00 - 8:30");
            txtSession2.setText("8:45 - 10:15");
        }
        else if(cl.equals("E")){
            txtSession1.setText("5:30 - 7:00");
            txtSession2.setText("7:15 - 8:45");
        }
        else{
            txtSession1.setText("");
            txtSession2.setText("");
        }
        txtMonday1.setText("");
        txtMonday2.setText("");
        txtTuesday1.setText("");
        txtTuesday2.setText("");
        txtWednesday1.setText("");
        txtWednesday2.setText("");
        txtThursday1.setText("");
        txtThursday2.setText("");
        txtFriday1.setText("");
        txtFriday2.setText("");
        txtSaturday1.setText("");
        txtSaturday2.setText("");
    }
    /////////////////////// Cambobox Course ////////////////////
    void getCboCourse(){        
        cboCourse.removeAllItems();
        cboCourse.addItem("--- Select ---");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("select * from tblCourse"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboCourse.addItem(clsCon.getRs().getString("CourseName"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }
    }
    void showCourseIdToLabel(){ 
        cboCourse.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                cboSemester.setEnabled(false);
                lblCourse.setText("");
                if(cboCourse.getSelectedItem().equals("--- Select ---"))
                    return;
               String c=(String) cboCourse.getSelectedItem();
               try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select CourseID from tblCourse where CourseName='"+c+"'"));
                    clsCon.getRs().first();
                    lblCourse.setText(clsCon.getRs().getString("CourseID"));
                    getCboSemester();
                    cboSemester.setEnabled(true);
                    getCboClass();
                    getCboSubject();
                } catch (SQLException ex) {
                }
                if(cboClass.getSelectedItem().equals("--- Select ---")||cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---"))
                    clearText();
                else{
                    clearText();
                    ViewTable();
                }
            }
        });
    }    
    /////////////////////// Cambobox Semester ////////////////////
    void getCboSemester(){   
        cboSemester.removeAllItems();
        cboSemester.addItem("--- Select ---");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("select Semester,SemesterID from qSubjectCourse Where CourseID = "+lblCourse.getText()+" group by Semester,SemesterID order by Semester"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboSemester.addItem(clsCon.getRs().getString("Semester"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }        
    }
    void showSemesterIdToLabel(){ 
        cboSemester.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                lblSemester.setText("");                
                cboClass.setEnabled(false);
                txtSaturday1.setBackground(Color.white);
                txtSaturday2.setBackground(Color.white);
                int i = cboSemester.getSelectedIndex();
                if(i == 0)
                    return;
                String c=(String) cboSemester.getSelectedItem();                
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select SemesterID from tblSemester where Semester='"+c+"'"));
                    clsCon.getRs().first();
                    lblSemester.setText(clsCon.getRs().getString("SemesterID"));
                    getCboClass();
                    getCboSubject();
                    cboClass.setEnabled(true);
                    
                    for(int k=5; k<9; k++){
                        if(lblSemester.getText().equals("Se00"+k)){
//                            txtSaturday1.setBackground(Color.red);
//                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                } catch (SQLException ex) {
                }
                if(cboClass.getSelectedItem().equals("--- Select ---")||cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---"))
                    clearText();
                else{
                    clearText();
                    ViewTable();
                }
            }
        });
    }
    /////////////////////// Cambobox Class ////////////////////
    void getCboClass(){        
        cboClass.removeAllItems();
        cboClass.addItem("--- Select ---");
        lblClass.setText("");
        if(lblSemester.getText().equals("Se006"))
                lblSemester.setText("Se005");
        try {    
                clsCon.setRs(clsCon.getStmt().executeQuery("Select ClassName,ClassID from qStu Where CourseName = '"+(String) cboCourse.getSelectedItem()+"' and SemesterID = '"+lblSemester.getText()+"' Group By ClassName,ClassID"));
                clsCon.getRs().first();
                if(clsCon.getRs().first())
                    do{
                        cboClass.addItem(clsCon.getRs().getString("ClassName"));
                    }while(clsCon.getRs().next());
        }
        catch(Exception ex){
        }
    }
    void showClassIdToLabel(){ 
        cboClass.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                String c=(String) cboClass.getSelectedItem();
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select ClassID from tblClass where ClassName='"+c+"'"));
                    clsCon.getRs().first();
                    lblClass.setText(clsCon.getRs().getString("ClassID"));
                    
                    for(int k=5; k<9; k++){
                        if(lblSemester.getText().equals("Se00"+k)){
//                            txtSaturday1.setBackground(Color.red);
//                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                    getCboSubject();
                    if(cboClass.getSelectedItem().equals("--- Select ---")||cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---"))
                        clearText();
                    else{
                        clearText();
                        ViewTable();
                    }
                    } catch (SQLException ex) {
                    ex.printStackTrace();
                }
               // ViewTable();
            }
        });
    }
    /////////////////////// Cambobox Subject ////////////////////
    void getCboSubject(){        
        cboSubject.removeAllItems();
        cboSubject.addItem("--- Select ---");
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("select SubjectName from qTimetable where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and Active = 1 group by SubjectName"));
            if(clsCon.getRs().first()){  
                do{
                    cboSubject.addItem(clsCon.getRs().getString("SubjectName"));
                }while(clsCon.getRs().next());
            }
        }
        catch(SQLException e){}
    }
    void showSubjectToLabel(){ 
        cboSubject.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                sub = (String) cboSubject.getSelectedItem();
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("select DayD,SessionID,ShiftID,RoomID from qTimetable where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and Active = 1 and SubjectName = '"+sub+"' "));
                    clsCon.getRs().first();
                    day1 = clsCon.getRs().getString("DayD");
                    ses1 = clsCon.getRs().getString("SessionID");
                    shi = clsCon.getRs().getString("ShiftID");
                    rm = clsCon.getRs().getString("RoomID");
                    clsCon.getRs().next();
                    day2 = clsCon.getRs().getString("DayD");
                    ses2 = clsCon.getRs().getString("SessionID");
                    clsCon.getRs().next();
                    day3 = clsCon.getRs().getString("DayD");
                    ses3 = clsCon.getRs().getString("SessionID");
                }
                catch(SQLException e){}
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("select count(*) from qTimetable Where CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"' and Active = 1 and ClassID = '"+lblClass.getText()+"' and SubjectName = '"+sub+"'"));
                    clsCon.getRs().first();
                    num = clsCon.getRs().getInt(1);
                }
                catch(SQLException e){}
//                JOptionPane.showConfirmDialog(null, day1+" "+ses1+" "+shi+" "+rm);
                getCboTeacher();
            }            
        });
    }    
    /////////////////////// Cambobox Teacher ////////////////////
    void getCboTeacher(){        
        cboTeacher.removeAllItems();
        cboTeacher.addItem("--- Select ---");
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("Select Name, count(Day) from qTeacherTime Where CourseName = '"+(String)cboCourse.getSelectedItem()+"' and SubjectName = '"+sub+"' and ShiftID = '"+shi+"' and Active =1 and  ((DayD = '"+day1+"' and SessionID = '"+ses1+"') or  (DayD = '"+day2+"' and  SessionID = '"+ses2+"') or  (DayD = '"+day3+"' and  SessionID = '"+ses3+"'))  Group By Name Having count(Day) >= "+num+""));
//            JOptionPane.showConfirmDialog(null, "Select Name, count(Day) from qTeacherTime Where CourseName = '"+(String)cboCourse.getSelectedItem()+"' and SubjectName = '"+sub+"' and ShiftID = '"+shi+"' and Active =1 and  ((DayD = '"+day1+"' and SessionID = '"+ses1+"') or  (DayD = '"+day2+"' and  SessionID = '"+ses2+"') or  (DayD = '"+day3+"' and  SessionID = '"+ses3+"'))  Group By Name Having count(Day) >= "+num+"");
            if(clsCon.getRs().first())
                do{
                    cboTeacher.addItem(clsCon.getRs().getString("Name"));
                }while(clsCon.getRs().next());
        }
        catch(SQLException e){}
    }
    void showTeacherToLabel(){ 
        cboSubject.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                sub = (String) cboSubject.getSelectedItem();
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("select DayD,SessionID,ShiftID from qTimetable where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and Active = 1 and SubjectName = '"+sub+"' "));
                    clsCon.getRs().first();
                    day1 = clsCon.getRs().getString("DayD");
                    ses1 = clsCon.getRs().getString("SessionID");
                    shi = clsCon.getRs().getString("ShiftID");
                    clsCon.getRs().next();
                    day2 = clsCon.getRs().getString("DayD");
                    ses2 = clsCon.getRs().getString("SessionID");
                    clsCon.getRs().next();
                    day3 = clsCon.getRs().getString("DayD");
                    ses3 = clsCon.getRs().getString("SessionID");
                }
                catch(SQLException e){}
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("select StudySessions from qSubjectCourse where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"'and SubjectName = '"+sub+"'"));
                    clsCon.getRs().first();
                    num = clsCon.getRs().getInt("StudySessions");
                }
                catch(SQLException e){}
                try {
                    clsCon.setRs(clsCon.getStmt().executeQuery("Select Name, count(Day) from qTeacherTime Where CourseName = '"+(String)cboCourse.getSelectedItem()+"' and SubjectName = '"+sub+"' and ShiftID = '"+shi+"' and Active =1 and  ((DayD = '"+day1+"' and SessionID = '"+ses1+"') or  (DayD = '"+day2+"' and  SessionID = '"+ses2+"') or  (DayD = '"+day3+"' and  SessionID = '"+ses3+"')) Group By Name Having count(Day) = "+num+""));
                    if(clsCon.getRs().first())
                        do{
                            cboTeacher.addItem(clsCon.getRs().getString("Name"));
                        }while(clsCon.getRs().next());
                }
                catch(SQLException e){}
                
            }
        });
    }    
    /////////////////////// Show Timetabling ////////////////////
    void ViewTable(){
        String subMo1 = null;
        String subTu1 = null;
        String subWe1 = null;
        String subTh1 = null;
        String subFr1 = null;
        String subSa1 = null;
        String subMo2 = null;
        String subTu2 = null;
        String subWe2 = null;
        String subTh2 = null;
        String subFr2 = null;
        String subSa2 = null;
        String type = null;
        
        String cl = ((String)cboClass.getSelectedItem()).substring(0,1);
        if(cl.equals("A")||cl.equals("S")){
            txtSession1.setText("2:00 - 3:30");
            txtSession2.setText("3:45 - 5:15");
        }
        else if(cl.equals("M")){
            txtSession1.setText("7:00 - 8:30");
            txtSession2.setText("8:45 - 10:15");
        }
        else if(cl.equals("E")){
            txtSession1.setText("5:30 - 7:00");
            txtSession2.setText("7:15 - 8:45");
        }
       
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("select * from qTimetable where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and Active = 1"));
            if(clsCon.getRs().first()){  
                do{
                    if(clsCon.getRs().getByte("RoomType")==1){
                        if(clsCon.getRs().getString("Day").equals("Monday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                              
                                subMo1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtMonday1.setText(subMo1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Tuesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subTu1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtTuesday1.setText(subTu1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Wednesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subWe1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");                            
                                txtWednesday1.setText(subWe1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Thursday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subTh1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtThursday1.setText(subTh1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Friday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subFr1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtFriday1.setText(subFr1);                            
                            }
                        if(clsCon.getRs().getString("Day").equals("Saturday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subSa1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtSaturday1.setText(subSa1);
                            }

                        if(clsCon.getRs().getString("Day").equals("Monday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subMo2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtMonday2.setText(subMo2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Tuesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subTu2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtTuesday2.setText(subTu2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Wednesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subWe2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtWednesday2.setText(subWe2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Thursday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subTh2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");  
                                txtThursday2.setText(subTh2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Friday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subFr2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtFriday2.setText(subFr2);                            
                            }
                        if(clsCon.getRs().getString("Day").equals("Saturday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subSa2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtSaturday2.setText(subSa2);
                            }  
                        if(txtSaturday1.getText() == null||txtSaturday1.getText().equals("")||txtSaturday2.getText() == null||txtSaturday2.getText().equals(""))
                        {
                            txtSaturday1.setBackground(Color.red);
                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                    if(clsCon.getRs().getByte("RoomType")==2){
                        type = "Lab";
                        if(clsCon.getRs().getString("Day").equals("Monday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                              
                                subMo1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtMonday1.setText(subMo1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Tuesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subTu1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtTuesday1.setText(subTu1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Wednesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subWe1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");                            
                                txtWednesday1.setText(subWe1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Thursday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subTh1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtThursday1.setText(subTh1);
                            }
                        if(clsCon.getRs().getString("Day").equals("Friday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subFr1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtFriday1.setText(subFr1);                            
                            }
                        if(clsCon.getRs().getString("Day").equals("Saturday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session1")){                            
                                subSa1 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtSaturday1.setText(subSa1);
                            }

                        if(clsCon.getRs().getString("Day").equals("Monday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subMo2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtMonday2.setText(subMo2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Tuesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subTu2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtTuesday2.setText(subTu2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Wednesday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subWe2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtWednesday2.setText(subWe2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Thursday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subTh2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");  
                                txtThursday2.setText(subTh2);
                            }
                        if(clsCon.getRs().getString("Day").equals("Friday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subFr2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber");
                                txtFriday2.setText(subFr2);                            
                            }
                        if(clsCon.getRs().getString("Day").equals("Saturday"))
                            if(clsCon.getRs().getString("SessionName").equals("Session2")){                            
                                subSa2 = clsCon.getRs().getString("SubjectName") + "\n\r" + clsCon.getRs().getString("Name") + "\n\r" + type + " " +  clsCon.getRs().getString("Building") + clsCon.getRs().getString("RoomNumber"); 
                                txtSaturday2.setText(subSa2);
                            }  
                        if(txtSaturday1.getText() == null||txtSaturday1.getText().equals("")||txtSaturday2.getText() == null||txtSaturday2.getText().equals(""))
                        {
                            txtSaturday1.setBackground(Color.red);
                            txtSaturday2.setBackground(Color.red);
                        }
                    }
                }while(clsCon.getRs().next());              
               
            }
        } catch (SQLException e) {
        }
    }
    public class TextAreaRenderer2 extends JTextArea
     implements TableCellRenderer {

     public TextAreaRenderer2() {

         Font font = new Font("Aparajita", Font.BOLD + Font.ITALIC, 16);

         setLineWrap(true);
         setWrapStyleWord(true);
         setBackground(Color.yellow);
         setBorder(BorderFactory.createEmptyBorder());
         setFont(font);

     } 

     @Override
     public Component getTableCellRendererComponent(JTable jTable,
          Object obj, boolean isSelected, boolean hasFocus, int row,
          int column) {

         setText((String)obj);
         setBackground(Color.WHITE);


         return this;
     }
 }
    private void cboSemesterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboSemesterFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSemesterFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lblClass.setVisible(false);
        lblCourse.setVisible(false);
        lblSemester.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            clsCon.getCon().close();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            clsCon.getCon().close();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---")||cboClass.getSelectedItem().equals("--- Select ---"))
            return;
        this.setSize(1459, 650);        
    }//GEN-LAST:event_btnEditActionPerformed

    private void cboTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTeacherActionPerformed
        
    }//GEN-LAST:event_cboTeacherActionPerformed
    int num = 0;
    String day1 = null, day2 = null, day3 = null;
    String ses1 = null, ses2 = null, ses3 = null;
    String shi = null; 
    String sub, rm;
    private void cboTeacherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTeacherMouseClicked
        
    }//GEN-LAST:event_cboTeacherMouseClicked

    private void cboSubjectFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboSubjectFocusLost
        
    }//GEN-LAST:event_cboSubjectFocusLost

    private void cboSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboSubjectMouseClicked
        
    }//GEN-LAST:event_cboSubjectMouseClicked

    void Insert(String s){
        try {
            String sql = s;
            clsCon.getStmt().executeUpdate(sql);
        } catch (Exception e) {
        }
    }
    void Update(String s){
        try {
                String sql = s;
                clsCon.getStmt().executeUpdate(sql);
            } catch (Exception e) {
            }
    }
    String name=null, id=null;
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        
        if(cboSubject.getSelectedItem().equals("--- Select ---")||cboTeacher.getSelectedItem().equals("--- Select ---"))
            return;
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("select * from qTimetable where CourseID="+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and SubjectName='"+sub+"' and Active = 1"));
            if(clsCon.getRs().first()){
                name = clsCon.getRs().getString("TeacherID");
                Update("update tblTimetable set Active = 0 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+name+"' and SesionID='"+ses1+"' and DayID = '"+day1+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
                Update("update tblTimetable set Active = 0 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+name+"' and SesionID='"+ses2+"' and DayID = '"+day2+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
                Update("update tblTimetable set Active = 0 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+name+"' and SesionID='"+ses3+"' and DayID = '"+day3+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
                
                Update("update tblTeacherTime set Active=1 where TeacherID='"+name+"' and ShiftID='"+shi+"' and DayID='"+day1+"' and SessionID='"+ses1+"'");
                Update("update tblTeacherTime set Active=1 where TeacherID='"+name+"' and ShiftID='"+shi+"' and DayID='"+day2+"' and SessionID='"+ses2+"'");
                Update("update tblTeacherTime set Active=1 where TeacherID='"+name+"' and ShiftID='"+shi+"' and DayID='"+day3+"' and SessionID='"+ses3+"'");
            }
        }
        catch (Exception e) {
        }
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("select * from tblTeacher where Name='"+(String) cboTeacher.getSelectedItem()+"'"));
            if(clsCon.getRs().first()){
                id = clsCon.getRs().getString("TeacherID");
                
                Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+id+"','"+ses1+"','"+day1+"','"+shi+"','"+rm+"',1)");
                Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+id+"','"+ses2+"','"+day2+"','"+shi+"','"+rm+"',1)");
                Insert("insert into tblTimetable(CourseID,SemesterID,ClassID,TeacherID,SesionID,DayID,ShiftID,RoomID,Active) values("+lblCourse.getText()+",'"+lblSemester.getText()+"','"+lblClass.getText()+"','"+id+"','"+ses3+"','"+day3+"','"+shi+"','"+rm+"',1)");
            
                Update("update tblTeacherTime set Active=2 where TeacherID='"+id+"' and ShiftID='"+shi+"' and DayID='"+day1+"' and SessionID='"+ses1+"'");
                Update("update tblTeacherTime set Active=2 where TeacherID='"+id+"' and ShiftID='"+shi+"' and DayID='"+day2+"' and SessionID='"+ses2+"'");
                Update("update tblTeacherTime set Active=2 where TeacherID='"+id+"' and ShiftID='"+shi+"' and DayID='"+day3+"' and SessionID='"+ses3+"'");
                
                Update("update tblTimetable set Active = 1 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+id+"' and SesionID='"+ses1+"' and DayID = '"+day1+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
                Update("update tblTimetable set Active = 1 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+id+"' and SesionID='"+ses2+"' and DayID = '"+day2+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
                Update("update tblTimetable set Active = 1 where CourseID = "+lblCourse.getText()+" and SemesterID='"+lblSemester.getText()+"' and ClassID='"+lblClass.getText()+"' and TeacherID='"+id+"' and SesionID='"+ses3+"' and DayID = '"+day3+"' and ShiftID = '"+shi+"' and RoomID='"+rm+"'");
            }
        }
        catch (Exception e) {
        }
        JOptionPane.showMessageDialog(this, "Update is successful!");
        this.setSize(1459, 570);
        if(cboClass.getSelectedItem().equals("--- Select ---")||cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---"))
            clearText();
        else{
            clearText();
            ViewTable();
        }
        cboSubject.setSelectedIndex(0);
        cboTeacher.setSelectedIndex(0);          
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int line = 0 ;
        try {
            clsCon.setRs(clsCon.getStmt().executeQuery("select count(*) from tblTimetable where CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"' and ClassID = '"+lblClass.getText()+"' and Active =1"));
            clsCon.getRs().first();
            line = Integer.parseInt(clsCon.getRs().getString(1));
        }        
        catch(SQLException e){}
        if(cboCourse.getSelectedItem().equals("--- Select ---")||cboSemester.getSelectedItem().equals("--- Select ---")||cboClass.getSelectedItem().equals("--- Select ---"))
            return;
        for(int i=0; i<line; i++){
            String room;
            String shift;
            String day;
            String session;
            String teacher;


            Update("update tblClass set Active = 1 where ClassID='"+lblClass.getText()+"'");
            try {
                clsCon.setRs(clsCon.getStmt().executeQuery("select * from tblTimetable where CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"' and ClassID = '"+lblClass.getText()+"' and Active =1"));
                clsCon.getRs().first();
                    room = clsCon.getRs().getString("RoomID");
                    shift = clsCon.getRs().getString("ShiftID");
                    day = clsCon.getRs().getString("DayID");
                    session = clsCon.getRs().getString("SesionID");
                    teacher = clsCon.getRs().getString("TeacherID");
                    Update("update tblClassRoom set Active  = 1 where RoomID = '"+room+"' and ShiftID = '"+shift+"' and DayID = '"+day+"' and SessionID = '"+session+"'");
                    Update("update tblTeacherTime set Active  = 1 where TeacherID = '"+teacher+"' and ShiftID = '"+shift+"' and DayID = '"+day+"' and SessionID = '"+session+"'");
                    Update("update tblTimetable set Active  = 0 where CourseID = "+lblCourse.getText()+" and SemesterID = '"+lblSemester.getText()+"' and ClassID = '"+lblClass.getText()+"' and TeacherID = '"+teacher+"' and ShiftID = '"+shift+"' and DayID = '"+day+"' and SesionID = '"+session+"' and RoomID = '"+room+"'");
              
            } catch (Exception e) {
            }
        }
        JOptionPane.showMessageDialog(this, "The record was deleted!");
        clearText();
        ViewTable();
    }//GEN-LAST:event_btnDeleteActionPerformed
    Vector selectedCells = new Vector<int[]>();
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgViewTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgViewTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgViewTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgViewTimetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgViewTimetable dialog = new dlgViewTimetable(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                        try {
                            clsCon.getCon().close();
                        } catch (SQLException ex) {
                        }
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboClass;
    private javax.swing.JComboBox<String> cboCourse;
    private javax.swing.JComboBox<String> cboSemester;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JComboBox<String> cboTeacher;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblClass;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JTextArea txtArea15;
    private javax.swing.JTextArea txtArea18;
    private javax.swing.JTextArea txtArea21;
    private javax.swing.JTextArea txtArea24;
    private javax.swing.JTextArea txtArea27;
    private javax.swing.JTextArea txtArea30;
    private javax.swing.JTextArea txtArea33;
    private javax.swing.JTextArea txtFriday1;
    private javax.swing.JTextArea txtFriday2;
    private javax.swing.JTextArea txtMonday1;
    private javax.swing.JTextArea txtMonday2;
    private javax.swing.JTextArea txtSaturday1;
    private javax.swing.JTextArea txtSaturday2;
    private javax.swing.JTextArea txtSession1;
    private javax.swing.JTextArea txtSession2;
    private javax.swing.JTextArea txtThursday1;
    private javax.swing.JTextArea txtThursday2;
    private javax.swing.JTextArea txtTuesday1;
    private javax.swing.JTextArea txtTuesday2;
    private javax.swing.JTextArea txtWednesday1;
    private javax.swing.JTextArea txtWednesday2;
    // End of variables declaration//GEN-END:variables

    private Object getTable() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
