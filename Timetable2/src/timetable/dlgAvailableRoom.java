/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetable;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class dlgAvailableRoom extends javax.swing.JDialog {

    /**
     * Creates new form dlgAvailableRoom
     */
    public dlgAvailableRoom(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        clsCon.inti();
        setLocationRelativeTo(null);
        
        cboSession.addItem("--- Select ---");
        
        showShiftIdToLabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblAlert1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblRoom = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cboShift = new javax.swing.JComboBox<>();
        cboDay = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboSession = new javax.swing.JComboBox<>();
        rdoAll = new javax.swing.JRadioButton();
        rdoSimple = new javax.swing.JRadioButton();
        rdoLab = new javax.swing.JRadioButton();
        btnCheck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Charlemagne Std", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Available Room");

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        lblAlert1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblAlert1.setForeground(new java.awt.Color(255, 0, 0));

        jtblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Building", "Room", "Type", "Tables"
            }
        ));
        jtblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblRoom);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Shift");

        cboShift.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboShift.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select ---", "Afternoon", "Evening", "Morning" }));

        cboDay.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cboDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select ---", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Day");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Session");

        cboSession.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        rdoAll.setBackground(new java.awt.Color(204, 255, 255));
        rdoAll.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        rdoAll.setText("All");
        rdoAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoAllActionPerformed(evt);
            }
        });

        rdoSimple.setBackground(new java.awt.Color(204, 255, 255));
        rdoSimple.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        rdoSimple.setText("Simple");
        rdoSimple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSimpleActionPerformed(evt);
            }
        });

        rdoLab.setBackground(new java.awt.Color(204, 255, 255));
        rdoLab.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        rdoLab.setText("Lab");
        rdoLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoLabActionPerformed(evt);
            }
        });

        btnCheck.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCheck)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(71, 71, 71)
                                    .addComponent(cboShift, 0, 239, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(44, 44, 44)
                                    .addComponent(cboSession, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(47, 47, 47)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(rdoAll))
                            .addGap(42, 42, 42)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(rdoSimple)
                                    .addGap(42, 42, 42)
                                    .addComponent(rdoLab))
                                .addComponent(cboDay, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblAlert1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboShift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cboSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoAll)
                    .addComponent(rdoSimple)
                    .addComponent(rdoLab))
                .addGap(26, 26, 26)
                .addComponent(btnCheck)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAlert1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    byte roomType;
    
    void getCboSession(){        
        cboSession.removeAllItems();
        cboSession.addItem("--- Select ---");
        if(cboShift.getSelectedItem().equals("--- Select ---")){
            cboSession.removeAllItems();
            cboSession.addItem("--- Select ---");
        }
        if(cboShift.getSelectedItem().equals("Morning")){
            cboSession.addItem("7:00am - 8:30am");
            cboSession.addItem("8:45am - 10:15am");
        }
        if(cboShift.getSelectedItem().equals("Evening")){
            cboSession.addItem("5:30pm - 7:00pm");
            cboSession.addItem("7:15pm - 8:45pm");
        }
        if(cboShift.getSelectedItem().equals("Afternoon")){
            cboSession.addItem("2:00pm - 3:30pm");
            cboSession.addItem("3:45pm - 5:15pm");
        }
    }
    void showShiftIdToLabel(){         
        cboShift.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                getCboSession();
            }
        });
    }
    
    private void jtblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblRoomMouseClicked

    }//GEN-LAST:event_jtblRoomMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            clsCon.getCon().close(); 
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            clsCon.getCon().close(); 
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void rdoAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoAllActionPerformed
        if(rdoAll.isSelected()){
            rdoSimple.setSelected(false);
            rdoLab.setSelected(false);
        }
    }//GEN-LAST:event_rdoAllActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        rdoAll.setSelected(true);
    }//GEN-LAST:event_formWindowOpened

    private void rdoSimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSimpleActionPerformed
        if(rdoSimple.isSelected()){
            rdoAll.setSelected(false);
            rdoLab.setSelected(false);
            roomType = 1;
        }
    }//GEN-LAST:event_rdoSimpleActionPerformed

    private void rdoLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoLabActionPerformed
        if(rdoLab.isSelected()){
            rdoAll.setSelected(false);
            rdoSimple.setSelected(false);
            roomType = 2;
        }
    }//GEN-LAST:event_rdoLabActionPerformed
    void viewRoom(){        
        DefaultTableModel modeTbl;
        modeTbl = (DefaultTableModel)jtblRoom.getModel();
        jtblRoom.removeAll();
        
        if(cboSession.getSelectedItem().equals("--- Select ---")){
            if(rdoSimple.isSelected()||rdoLab.isSelected()){
                try{
                    clsCon.setRs(clsCon.getStmt().executeQuery("select RoomNumber,RoomType,Tables,Building,count(RoomNumber) from qRoom where ShiftName='"+cboShift.getSelectedItem()+"' and Day='"+cboDay.getSelectedItem()+"' and RoomType="+roomType+" and Active = 1 group by RoomNumber,RoomType,Tables,Building Having count(RoomNumber) = 2 order by Building,RoomNumber"));
                    if(clsCon.getRs().first()){
                        do{
                            String roomName = clsCon.getRs().getString("RoomNumber");
                            String building = clsCon.getRs().getString("Building");
                            String table = String.valueOf(clsCon.getRs().getByte("Tables"));
                            byte t = clsCon.getRs().getByte("RoomType");
                            String type=null;
                            if(t == 1)
                                type = "Simple";
                            if(t == 2)
                                type = "Lab";
                            String st[]={building,roomName,type,table};

                            modeTbl.addRow(st);
                        }while(clsCon.getRs().next());
                    } 
                }catch(SQLException e){            
                } 
            }
            if(rdoAll.isSelected()){
                try{
                    clsCon.setRs(clsCon.getStmt().executeQuery("select RoomNumber,RoomType,Tables,Building,count(RoomNumber) from qRoom where ShiftName='"+cboShift.getSelectedItem()+"' and Day='"+cboDay.getSelectedItem()+"' and Active = 1 group by RoomNumber,RoomType,Tables,Building Having count(RoomNumber) = 2 order by Building, RoomNumber"));
                    if(clsCon.getRs().first()){
                        do{
                            String roomName = clsCon.getRs().getString("RoomNumber");
                            String building = clsCon.getRs().getString("Building");
                            String table = String.valueOf(clsCon.getRs().getByte("Tables"));
                            byte t = clsCon.getRs().getByte("RoomType");
                            String type=null;
                            if(t == 1)
                                type = "Simple";
                            if(t == 2)
                                type = "Lab";
                            String st[]={building,roomName,type,table};

                            modeTbl.addRow(st);
                        }while(clsCon.getRs().next());
                    } 
                }catch(SQLException e){            
                } 
            }
        }
        
        String s=null;
        if(cboSession.getSelectedItem().equals("7:00am - 8:30am")||cboSession.getSelectedItem().equals("5:30pm - 7:00pm")||cboSession.getSelectedItem().equals("2:00pm - 3:30pm"))
            s = "Ses01";
        if(cboSession.getSelectedItem().equals("8:45am - 10:15am")||cboSession.getSelectedItem().equals("7:15pm - 8:45pm")||cboSession.getSelectedItem().equals("3:45pm - 5:15pm"))
            s = "Ses02";
        if(rdoSimple.isSelected()||rdoLab.isSelected()){
            try{
                clsCon.setRs(clsCon.getStmt().executeQuery("select RoomNumber,RoomType,Tables,Building from qRoom where ShiftName='"+cboShift.getSelectedItem()+"' and Day='"+cboDay.getSelectedItem()+"' and SessionID='"+s+"' and RoomType="+roomType+" and Active = 1 group by RoomNumber,RoomType,Tables,Building order by Building,RoomNumber"));
                if(clsCon.getRs().first()){
                    do{
                        String roomName = clsCon.getRs().getString("RoomNumber");
                        String building = clsCon.getRs().getString("Building");
                        String table = String.valueOf(clsCon.getRs().getByte("Tables"));
                        byte t = clsCon.getRs().getByte("RoomType");
                        String type=null;
                        if(t == 1)
                            type = "Simple";
                        if(t == 2)
                            type = "Lab";
                        String st[]={building,roomName,type,table};

                        modeTbl.addRow(st);
                    }while(clsCon.getRs().next());
                } 
            }catch(SQLException e){            
            } 
        }
        if(rdoAll.isSelected()){
            try{
                clsCon.setRs(clsCon.getStmt().executeQuery("select RoomNumber,RoomType,Tables,Building from qRoom where ShiftName='"+cboShift.getSelectedItem()+"' and Day='"+cboDay.getSelectedItem()+"' and SessionID='"+s+"' and Active = 1 group by RoomNumber,RoomType,Tables,Building order by Building, RoomNumber"));
                if(clsCon.getRs().first()){
                    do{
                        String roomName = clsCon.getRs().getString("RoomNumber");
                        String building = clsCon.getRs().getString("Building");
                        String table = String.valueOf(clsCon.getRs().getByte("Tables"));
                        byte t = clsCon.getRs().getByte("RoomType");
                        String type=null;
                        if(t == 1)
                            type = "Simple";
                        if(t == 2)
                            type = "Lab";
                        String st[]={building,roomName,type,table};

                        modeTbl.addRow(st);
                    }while(clsCon.getRs().next());
                } 
            }catch(SQLException e){            
            } 
        }
    }
    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        int i=0;
        DefaultTableModel modeTbl;
        modeTbl = (DefaultTableModel)jtblRoom.getModel();
        if(jtblRoom.getRowCount()>0)
        do{
                modeTbl.removeRow(jtblRoom.getRowCount()-1);                
            }while(jtblRoom.getRowCount()>0);
        viewRoom();
    }//GEN-LAST:event_btnCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgAvailableRoom dialog = new dlgAvailableRoom(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                        try {
                            clsCon.getCon().close(); 
                        } catch (SQLException ex) {
                        }
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JComboBox<String> cboDay;
    private javax.swing.JComboBox<String> cboSession;
    private javax.swing.JComboBox<String> cboShift;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblRoom;
    private javax.swing.JLabel lblAlert1;
    private javax.swing.JRadioButton rdoAll;
    private javax.swing.JRadioButton rdoLab;
    private javax.swing.JRadioButton rdoSimple;
    // End of variables declaration//GEN-END:variables
}
